[{"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\index.js":"1","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\App.js":"2","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Sidebar\\Sidebar.js":"3","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Sidebar\\SidebarChat\\SidebarChat.js":"4","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Chat\\Chat.js":"5","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\firebase.js":"6","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Login\\Login.js":"7","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\StateProvider.js":"8","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Reducer.js":"9"},{"size":404,"mtime":1609999896000,"results":"10","hashOfConfig":"11"},{"size":1678,"mtime":1610023833337,"results":"12","hashOfConfig":"11"},{"size":2096,"mtime":1610023923294,"results":"13","hashOfConfig":"11"},{"size":1817,"mtime":1610030806221,"results":"14","hashOfConfig":"11"},{"size":3835,"mtime":1610030852271,"results":"15","hashOfConfig":"11"},{"size":633,"mtime":1610021872055,"results":"16","hashOfConfig":"11"},{"size":1134,"mtime":1610023732515,"results":"17","hashOfConfig":"11"},{"size":432,"mtime":1610018223619,"results":"18","hashOfConfig":"11"},{"size":353,"mtime":1610035050932,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"iinxbc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\index.js",[],["42","43"],"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\App.js",["44","45","46","47","48"],"import \"./App.css\";\nimport Chat from \"./Chat/Chat\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./Login/Login\";\nimport { useStateValue } from \"./StateProvider\";\nimport { useContext, useState } from \"react\";\nimport { auth, provider } from \"./firebase\";\nimport { Button } from \"@material-ui/core\";\nimport { actionType } from \"./Reducer\";\nimport image from \"./whatsapp.png\";\nimport \"./Login/Login.css\";\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type: actionType.SET_USER,\n          user: result.user,\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n      {!user ? (\n        <div className=\"login__container\">\n          <div className=\"login__container\">\n            <img src={image} />\n            <div className=\"login__text\">\n              <h2>Sign in to Whatsapp</h2>\n            </div>\n            <Button type=\"submit\" onClick={signIn} className=\"btn\">\n              SIGN IN WITH GOOGLE\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar user={user} />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Sidebar\\Sidebar.js",[],"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Sidebar\\SidebarChat\\SidebarChat.js",["49"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport db from \"../../firebase\";\r\nimport \"./SidebarChat.css\";\r\nimport firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SidebarChat = ({ addNewChat, name, id }) => {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [lastMessage, setLastMessage] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  // Collect last message from specified room\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setLastMessage(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  // Create Room\r\n  const createChat = () => {\r\n    const roomName = prompt(\">>> Please enter a room name for chat !!\");\r\n\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebar__chat\">\r\n        <div className=\"chat__user\">\r\n          <Avatar\r\n            className=\"roomImage\"\r\n            src={`https://avatars.dicebear.com/api/human/${seed}.svg`}\r\n          />\r\n          <div className=\"text\">\r\n            <h3>{name}</h3>\r\n            <p>{lastMessage[0]?.message}</p>\r\n          </div>\r\n        </div>\r\n        <small>\r\n          {new Date(lastMessage[0]?.timestamp?.toDate()).toUTCString()}\r\n        </small>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebar__createchat\">\r\n      <h3>Add New Chat</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarChat;\r\n","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Chat\\Chat.js",["50","51","52"],"import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport MoreVertOutlinedIcon from \"@material-ui/icons/MoreVertOutlined\";\r\nimport EmojiEmotionsOutlinedIcon from \"@material-ui/icons/EmojiEmotionsOutlined\";\r\nimport AttachFileOutlinedIcon from \"@material-ui/icons/AttachFileOutlined\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { StateContext, useStateValue } from \"../StateProvider\";\r\n\r\nconst Chat = () => {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  // message handler\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n\r\n    return () => {};\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <div className=\"chat__headerLeft\">\r\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n          <div className=\"chatuser\">\r\n            <h3>{roomName}</h3>\r\n            <small>\r\n              last seen{\" \"}\r\n              {new Date(\r\n                messages[messages.length - 1]?.timestamp?.toDate()\r\n              ).toUTCString()}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertOutlinedIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((msg) => {\r\n          const { name, message, timestamp } = msg;\r\n          return (\r\n            <p\r\n              className={`chat__message ${\r\n                name === user.displayName && \"chat__receiver\"\r\n              }`}\r\n            >\r\n              {message}\r\n              <span className=\"chat__name\">{name}</span>\r\n              <span className=\"chat__timestamp\">\r\n                {new Date(timestamp?.toDate()).toUTCString() || \"\"}\r\n              </span>\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <IconButton>\r\n          <EmojiEmotionsOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <AttachFileOutlinedIcon />\r\n        </IconButton>\r\n\r\n        <form>\r\n          <input\r\n            placeholder=\"Type a message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button onClick={sendMessage} disabled={!input}>\r\n            <SendIcon className=\"sendIcon\" />\r\n          </button>\r\n        </form>\r\n        <IconButton>\r\n          <MicIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\firebase.js",[],"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Login\\Login.js",[],"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\StateProvider.js",[],"C:\\Users\\Hp\\Desktop\\whatsapp-clone\\whatsapp-clone\\src\\Reducer.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":50,"nodeType":"59","messageId":"60","endLine":4,"endColumn":54},{"ruleId":"57","severity":1,"message":"61","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":7,"column":10,"nodeType":"59","messageId":"60","endLine":7,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":7,"column":22,"nodeType":"59","messageId":"60","endLine":7,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":34,"column":13,"nodeType":"66","endLine":34,"endColumn":32},{"ruleId":"67","severity":1,"message":"68","line":27,"column":6,"nodeType":"69","endLine":27,"endColumn":8,"suggestions":"70"},{"ruleId":"57","severity":1,"message":"62","line":2,"column":17,"nodeType":"59","messageId":"60","endLine":2,"endColumn":27},{"ruleId":"57","severity":1,"message":"71","line":13,"column":10,"nodeType":"59","messageId":"60","endLine":13,"endColumn":22},{"ruleId":"57","severity":1,"message":"72","line":21,"column":20,"nodeType":"59","messageId":"60","endLine":21,"endColumn":28},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'StateContext' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [id]",{"range":"78","text":"79"},[800,802],"[id]"]